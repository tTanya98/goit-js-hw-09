{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAoBvC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAM,C,SAAEF,E,MAAUC,GAClBE,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACNI,EAAQL,GAERM,EAAON,EAAI,GAERD,EAAM,G,CA5BbL,EAAQc,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOlB,EAAQK,MAAMc,OACjC,IAAK,IAAIC,EAAI,EAAGA,GAAKpB,EAAQqB,OAAOF,MAAOC,GAAK,EAChDjB,EAAciB,EAAGH,GAChBK,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,QAAQC,IAAI,uBAAqBpB,QAAiBC,MAAU,IAE7DoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBkB,QAAQC,IAAI,sBAAoBpB,QAAeC,MAAU,IAE3DY,GAASC,OAAOlB,EAAQ0B,KAAKP,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form')\n\nformRef.addEventListener('submit', onSubmitForm); \n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  \n  let delay = Number(formRef.delay.value);\n  for (let i = 1; i <= formRef.amount.value; i += 1) {\n  createPromise(i, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delay += Number(formRef.stop.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const obj = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n    resolve(obj);\n      } else {\n    reject(obj);\n      }\n    }, delay);\n  });\n}\n"],"names":["parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","obj","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","i","amount","then","console","log","catch","stop"],"version":3,"file":"03-promises.6041b5c2.js.map"}